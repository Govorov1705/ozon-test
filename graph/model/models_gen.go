// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type Auth struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type Comment struct {
	ID        uuid.UUID  `json:"id"`
	PostID    uuid.UUID  `json:"postId"`
	UserID    uuid.UUID  `json:"userId"`
	RootID    uuid.UUID  `json:"rootId"`
	ReplyTo   *uuid.UUID `json:"replyTo,omitempty"`
	Content   string     `json:"content"`
	CreatedAt time.Time  `json:"createdAt"`
}

type CommentWithReplies struct {
	ID        uuid.UUID             `json:"id"`
	PostID    uuid.UUID             `json:"postId"`
	UserID    uuid.UUID             `json:"userId"`
	RootID    uuid.UUID             `json:"rootId"`
	ReplyTo   *uuid.UUID            `json:"replyTo,omitempty"`
	Content   string                `json:"content"`
	CreatedAt time.Time             `json:"createdAt"`
	Replies   []*CommentWithReplies `json:"replies"`
}

type Jwt struct {
	Token string `json:"token"`
}

type Mutation struct {
}

type NewComment struct {
	PostID  uuid.UUID  `json:"postId"`
	ReplyTo *uuid.UUID `json:"replyTo,omitempty"`
	Content string     `json:"content"`
}

type NewPost struct {
	Title              string `json:"title"`
	Content            string `json:"content"`
	AreCommentsAllowed *bool  `json:"areCommentsAllowed,omitempty"`
}

type Post struct {
	ID                 uuid.UUID `json:"id"`
	UserID             uuid.UUID `json:"userId"`
	Title              string    `json:"title"`
	Content            string    `json:"content"`
	AreCommentsAllowed bool      `json:"areCommentsAllowed"`
	CreatedAt          time.Time `json:"createdAt"`
}

type PostWithComments struct {
	Post     *Post                 `json:"post"`
	Comments []*CommentWithReplies `json:"comments"`
}

type Query struct {
}

type Subscription struct {
}

type User struct {
	ID             uuid.UUID `json:"id"`
	Username       string    `json:"username"`
	HashedPassword string    `json:"hashedPassword"`
}
